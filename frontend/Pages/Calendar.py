import streamlit as st
from google.auth.exceptions import RefreshError
from backend.google_auth import (
    get_credentials,
    get_calendar_service_for_user,
    start_auth_flow,
    finish_auth_flow,
    get_token_path,
)
from backend.calendar_sync import sync_all_to_calendar, delete_spam_events, sync_habits_to_calendar
from datetime import datetime
import os

def show_calendar():
    st.title("üìÖ Google Calendar —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è")

    user = st.session_state.get("user")
    if not user:
        st.error("‚ùó –í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ.")
        return

    user_id = user.id
    token_path = get_token_path(user_id)

    # --------------------------
    # üîê –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    # --------------------------
    creds = None
    email = None
    if token_path.exists():
        try:
            creds = get_credentials(user_id)
            email = creds.id_token.get("email") if creds.id_token else None
            if email:
                st.success(f"üîì –¢–æ–∫–µ–Ω –∑–Ω–∞–π–¥–µ–Ω–æ. –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ —è–∫: **{email}**")
            else:
                st.warning("‚ö†Ô∏è –¢–æ–∫–µ–Ω –∑–Ω–∞–π–¥–µ–Ω–æ, –∞–ª–µ email –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ.")
        except Exception as e:
            st.warning(f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ –∑ —Ç–æ–∫–µ–Ω–æ–º: {e}")
    else:
        st.info("üîí –í–∏ —â–µ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞–ª–∏—Å—è –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ Google Calendar.")

    # --------------------------
    # ‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–∫–µ–Ω
    # --------------------------
    if token_path.exists():
        if st.button("üö™ –í–∏–π—Ç–∏ –∑ Google –∞–∫–∞—É–Ω—Ç–∞"):
            try:
                os.remove(token_path)
                st.success("üîí –¢–æ–∫–µ–Ω –≤–∏–¥–∞–ª–µ–Ω–æ. –í–∏ –≤–∏–π—à–ª–∏ –∑ –∞–∫–∞—É–Ω—Ç–∞ Google.")
                st.rerun()
            except Exception as e:
                st.error(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–∫–µ–Ω: {e}")

    # --------------------------
    # üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
    # --------------------------
    if not creds:
        flow, auth_url = start_auth_flow()
        st.markdown(f"[üîê –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å —Ç—É—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó Google]({auth_url})")

        code = st.text_input("–í—Å—Ç–∞–≤—Ç–µ –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —Å—é–¥–∏:")
        if st.button("üîì –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é"):
            try:
                finish_auth_flow(flow, code, user_id)
                st.success("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É...")
                st.rerun()
            except Exception as e:
                st.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó: {e}")

    # --------------------------
    # üîÑ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è —Å–ø—Ä–∞–≤
    # --------------------------
    st.markdown("---")
    st.subheader("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Å–ø—Ä–∞–≤ (–±–µ–∑ event_id)")
    if st.button("üîÅ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ —Å–ø—Ä–∞–≤–∏"):
        try:
            from backend.calendar_sync import sync_tasks_to_calendar
            sync_tasks_to_calendar(user_id)
            st.success("‚úÖ –°–ø—Ä–∞–≤–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –¥–æ Google Calendar.")
        except RefreshError:
            st.error("‚ùå –ü–æ—Ç—Ä—ñ–±–Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è Google.")
        except Exception as e:
            st.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó: {e}")

    # --------------------------
    # üõë –ù–µ–±–µ–∑–ø–µ—á–Ω–∞ –∑–æ–Ω–∞
    # --------------------------
    st.markdown("---")
    with st.expander("üõë –ù–µ–±–µ–∑–ø–µ—á–Ω–∞ –∑–æ–Ω–∞"):
        st.markdown("**–û—á–∏—Å—Ç–∏—Ç–∏ –≤—Å—ñ –∑–∞–ø–∏—Å–∏**")
        st.caption("–í—Å—ñ –≤–Ω–µ—Å–µ–Ω—ñ –≤–∞–º–∏ –¥–∞–Ω—ñ –ø—Ä–æ –∞–∫—Ç–∏–≤–Ω—ñ —Ç–∞ –≤—ñ–¥–∫–ª–∞–¥–µ–Ω—ñ —Å–ø—Ä–∞–≤–∏ —Ç–∞ –∑–≤–∏—á–∫–∏ –±—É–¥—É—Ç—å –≤–∏–¥–∞–ª–µ–Ω—ñ.")

        if st.button("üî• –û—á–∏—Å—Ç–∏—Ç–∏ –≤—Å—ñ –∑–∞–ø–∏—Å–∏"):
            try:
                # –í–∏–¥–∞–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –ø–æ–¥—ñ–π –∑ Google Calendar
                service = get_calendar_service_for_user(user_id)
                events = service.events().list(calendarId='primary', singleEvents=True).execute().get("items", [])
                deleted_count = 0
                for event in events:
                    try:
                        service.events().delete(calendarId='primary', eventId=event["id"]).execute()
                        deleted_count += 1
                    except Exception as e:
                        print(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–¥—ñ—é {event['id']}: {e}")

                # –í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤ –∑ —Ç–∞–±–ª–∏—Ü—å Supabase
                from backend.database import get_supabase_client_with_token
                token = st.session_state.get("token")
                client = get_supabase_client_with_token(token)

                tables_to_clear = [
                    "habits_active", "tasks_active",
                    "habits_postponed", "tasks_postponed"
                ]
                for table in tables_to_clear:
                    client.table(table).delete().eq("user_id", user_id).execute()

                st.success(f"‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ {deleted_count} –ø–æ–¥—ñ–π –∑ Google Calendar —Ç–∞ –≤—Å—ñ –∞–∫—Ç–∏–≤–Ω—ñ/–≤—ñ–¥–∫–ª–∞–¥–µ–Ω—ñ –∑–∞–ø–∏—Å–∏.")

            except Exception as e:
                st.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—á–∏—â–µ–Ω–Ω—ñ: {e}")


