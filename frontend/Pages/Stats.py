import streamlit as st
import pandas as pd
from frontend.auth import require_login
from backend.logic import get_completed_entries_by_month

def show_statistics():
    user = require_login()
    st.title("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å —ñ –∑–≤–∏—á–æ–∫")

    df = get_completed_entries_by_month(user.id)
    if df.empty:
        st.info("–ü–æ–∫–∏ –Ω–µ–º–∞—î –∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö –∑–∞–ø–∏—Å—ñ–≤.")
        return

    df["month"] = pd.to_datetime(df["date"]).dt.to_period("M").astype(str)

    # --- –ì—Ä–∞—Ñ—ñ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö –∑–≤–∏—á–æ–∫ ---
    st.subheader("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–≤–∏—á–∫–∏ –ø–æ –º—ñ—Å—è—Ü—è—Ö")
    habits = df[df["type"] == "habit"]
    if not habits.empty:
        habit_summary = habits.groupby("month").size()
        st.bar_chart(habit_summary)

        months_habits = habits["month"].sort_values().unique().tolist()
        selected_month_habit = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å –¥–ª—è –∑–≤–∏—á–æ–∫:", months_habits)

        st.markdown(f"### –ó–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–≤–∏—á–∫–∏ –∑–∞ {selected_month_habit}")
        filtered_habits = habits[habits["month"] == selected_month_habit]
        for _, habit in filtered_habits.iterrows():
            st.markdown(f"‚Ä¢ **{habit['name']}** ‚Äî {habit.get('completed_at', '')}")

    else:
        st.info("–ù–µ–º–∞—î –∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö –∑–≤–∏—á–æ–∫.")

    st.markdown("---")

    # --- –ì—Ä–∞—Ñ—ñ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å ---
    st.subheader("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –ø–æ –º—ñ—Å—è—Ü—è—Ö")
    tasks = df[df["type"] == "task"]
    if not tasks.empty:
        task_summary = tasks.groupby("month").size()
        st.bar_chart(task_summary)

        months_tasks = tasks["month"].sort_values().unique().tolist()
        selected_month_task = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å –¥–ª—è –∑–∞–≤–¥–∞–Ω—å:", months_tasks)

        st.markdown(f"### –ó–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞ {selected_month_task}")
        filtered_tasks = tasks[tasks["month"] == selected_month_task]
        for _, task in filtered_tasks.iterrows():
            st.markdown(f"‚Ä¢ **{task['name']}** ‚Äî {task.get('date', '')} –æ {task.get('time', '')}")

    else:
        st.info("–ù–µ–º–∞—î –∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å.")
