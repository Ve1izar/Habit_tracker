import streamlit as st
import pandas as pd
from datetime import datetime
from frontend.auth import require_login
from backend.logic import get_completed_entries_by_month

def show_statistics():
    user = require_login()
    st.title("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å —ñ –∑–≤–∏—á–æ–∫")

    df = get_completed_entries_by_month(user.id)
    if df.empty:
        st.info("–ü–æ–∫–∏ –Ω–µ–º–∞—î –∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö –∑–∞–ø–∏—Å—ñ–≤.")
        return

    # –î–æ–¥–∞—î–º–æ –º—ñ—Å—è—Ü—å —É –≤–∏–≥–ª—è–¥—ñ YYYY-MM
    df["month"] = pd.to_datetime(df["date"]).dt.to_period("M").astype(str)

    # --- –°—Ç–æ–≤–ø—á–∞—Å—Ç–∞ –¥—ñ–∞–≥—Ä–∞–º–∞ –ø–æ –º—ñ—Å—è—Ü—è—Ö ---
    st.subheader("üìà –í–∏–∫–æ–Ω–∞–Ω–æ –ø–æ –º—ñ—Å—è—Ü—è—Ö")
    monthly_summary = df.groupby(["month", "type"]).size().unstack(fill_value=0)
    st.bar_chart(monthly_summary)

    # --- –§—ñ–ª—å—Ç—Ä –ø–æ –º—ñ—Å—è—Ü—é ---
    months = df["month"].sort_values().unique().tolist()
    selected_month = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –º—ñ—Å—è—Ü—å –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –¥–µ—Ç–∞–ª–µ–π:", months)

    st.markdown(f"### –î–µ—Ç–∞–ª—ñ –∑–∞ {selected_month}")
    filtered = df[df["month"] == selected_month]

    habits = filtered[filtered["type"] == "habit"]
    tasks = filtered[filtered["type"] == "task"]

    st.subheader("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–≤–∏—á–∫–∏")
    for _, habit in habits.iterrows():
        st.markdown(f"‚Ä¢ **{habit['name']}** ‚Äî {habit.get('frequency', '')} ({habit.get('day_of_week', '')})")

    st.subheader("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è")
    for _, task in tasks.iterrows():
        st.markdown(f"‚Ä¢ **{task['name']}** ‚Äî {task.get('date', '')} –æ {task.get('time', '')}")
